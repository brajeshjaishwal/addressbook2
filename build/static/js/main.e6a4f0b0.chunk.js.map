{"version":3,"sources":["components/app/privateroute.js","constants/auth.js","api/api.js","actions/auth.js","components/user/register.js","components/user/login.js","components/group/group.js","components/group/groupContainer.js","components/contact/contact.js","components/contact/contactContainer.js","components/dashboard.js","components/app/app.js","serviceWorker.js","reducers/authReducer.js","constants/contact.js","reducers/contactReducer.js","reducers/index.js","store/store.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","constants","LOGIN","LOGIN_SUCCEDED","LOGIN_FAILED","REGISTER","REGISTER_SUCCEDED","REGISTER_FAILED","proxy","axios","create","baseURL","handleError","error","errorMessage","response","console","log","data","message","request","config","registerUserAction","name","password","post","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","resp","_ref3","wrap","_context","prev","next","type","payload","loading","sent","undefined","registerFailed","registered","t0","stop","this","_x","apply","arguments","loginUserAction","_ref4","_ref5","_callee2","_ref6","user","token","_context2","sessionStorage","setItem","loginFailed","loginSucceded","_x2","oneCapitalLetter","RegExp","oneNumber","oneSpecialLetter","min8Length","RegisterComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","e","setState","defineProperty","target","value","test","passwordError","onSubmitHandler","event","preventDefault","state","alert","abrupt","open","registerUser","getItem","history","push","Modal","size","closeOnEscape","closeOnDimmerClick","Header","Content","Input","fluid","placeholder","style","marginTop","onChange","icon","iconPosition","label","labelPosition","color","Divider","Button","primary","onClick","register","Message","href","connect","bindActionCreators","LoginComponent","elementName","loginUser","login","auth","GroupComponent","List","Item","key","group","Card","Grid","columns","Row","Column","width","Label","circular","marginLeft","GroupContainerComponent","Segment","Icon","map","g","ContactComponent","contact","email","phone","ContactContainerComponent","action","Select","compact","options","text","defaultValue","c","Dashboard","divided","stretched","App","BrowserRouter","Container","className","textAlign","basic","content","Switch","exact","path","Boolean","window","location","hostname","match","initialState","authReducer","length","globals","objectSpread","constants_contact","AddContact","AddContact_Success","AddContact_Failure","RemoveContact","RemoveContact_Success","RemoveContact_Failure","EditContact","EditContact_Success","EditContact_Failure","FetchContact","FetchContact_Success","FetchContact_Failure","ChangeActive_Contact","ChangeActive_Contact_Success","ChangeActive_Contact_Failure","family","relation","parent","success","familyReducer","arr","FetchFamily","FetchFamily_Failure","FetchFamily_Success","parentkey","_action$payload","oldFiltered","filter","member","tempfamily","toConsumableArray","concat","members","AddMember","AddMember_Failure","AddMember_Success","rootReducer","combineReducers","contactReducer","groupReducer","store","createStore","applyMiddleware","thunk","ReactDOM","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6a4f0b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    return <Route {...rest} render={props => (\r\n                                        //sessionStorage.getItem('token')\r\n                                            true\r\n                                            ? <Component {...props} />\r\n                                            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n                                    )} />\r\n    }","const constants = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGIN_SUCCEDED: \"LOGIN_SUCCEDED\",\r\n    LOGIN_FAILED: \"LOGIN_FAILED\",\r\n\r\n    REGISTER: \"REGISTER\",\r\n    REGISTER_SUCCEDED: \"REGISTER_SUCCEDED\",\r\n    REGISTER_FAILED: \"REGISTER_FAILED\",\r\n}\r\n\r\nexport default constants","import axios from 'axios'\r\n\r\nexport const proxy = axios.create({ \r\n    baseURL: 'http://localhost:3300/'\r\n})\r\n\r\nexport const handleError = error => {\r\n    let errorMessage = ''\r\n    if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response);\r\n        errorMessage = error.response.data.message;\r\n        // console.log(error.response.status);\r\n        // console.log(error.response.headers);\r\n    } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the \r\n        // browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n        errorMessage = 'Network error'\r\n    } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n        errorMessage = error.message;\r\n    }\r\n    console.log(error.config);\r\n    return errorMessage;\r\n}\r\n","import constants from '../constants/auth'\r\nimport { proxy, handleError } from '../api/api'\r\n\r\nconst { REGISTER, REGISTER_FAILED, REGISTER_SUCCEDED, LOGIN, LOGIN_SUCCEDED, LOGIN_FAILED } = constants\r\n\r\nexport const registerUserAction = function ({name, password}) {\r\n    const request = proxy.post('users/register', {name, password})\r\n    return async (dispatch) => {\r\n        dispatch(registerStarted())\r\n        try{\r\n            let resp = await request\r\n            let {message} = await resp.data\r\n            if(message !== undefined) {\r\n                dispatch(registerFailed(message))\r\n            }else \r\n                dispatch(registerSucceded())\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(registerFailed(errorMessage))\r\n        }\r\n    }\r\n    function registerStarted() { return { type: REGISTER , payload: { error: false, loading: true }} }\r\n    function registerSucceded() { return { type: REGISTER_SUCCEDED, payload: { registered: true, loading: false } } }\r\n    function registerFailed(error) { return { type: REGISTER_FAILED, payload: { error, loading: false} } }\r\n}\r\n\r\nexport const loginUserAction = ({name, password}) => {\r\n    return async (dispatch) => {\r\n        dispatch(loginStarted())\r\n        try{\r\n            let resp = await proxy.post('users/login', {name, password})\r\n            let {user, token, message } = await resp.data\r\n            if(user && user !== '' && user !== undefined)\r\n                sessionStorage.setItem('name', user)\r\n            if(token && token !== '' && token !== undefined )\r\n                sessionStorage.setItem('token', token)\r\n            if(user === null || user === undefined || token === undefined) {\r\n                dispatch(loginFailed(message))\r\n            }else \r\n                dispatch(loginSucceded(user))\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(loginFailed(errorMessage))\r\n        }\r\n    }\r\n    function loginStarted() { return { type: LOGIN, payload: { error: false, loading: true } } }\r\n    function loginSucceded(user) { return { type: LOGIN_SUCCEDED, payload: { user, loading: false } } }\r\n    function loginFailed(error) { return { type: LOGIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Message, Divider} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { registerUserAction } from '../../actions/auth';\r\n\r\n//var strongRegex = new RegExp(\"^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\nconst oneCapitalLetter = new RegExp(\"^(?=.*[A-Z])\")\r\nconst oneNumber = new RegExp(\"^(?=.*[0-9])\")\r\nconst oneSpecialLetter = new RegExp(\"^(?=.*[!@#$%^&*])\")\r\nconst min8Length = new RegExp(\"^(?=.{8,})\")\r\n\r\n\r\nclass RegisterComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            password: '',\r\n            open: true,\r\n            passwordError: 'length > 8, special character, number, capital letter',\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n        if(e.target.name === 'password') {\r\n            let error = ''\r\n            if(!min8Length.test(e.target.value)) {\r\n                error += 'length > 8, '\r\n            }\r\n            if(!oneSpecialLetter.test(e.target.value)) {\r\n                error += 'special character, '\r\n            }\r\n            if(!oneNumber.test(e.target.value)) {\r\n                error += 'number, '\r\n            }\r\n            if(!oneCapitalLetter.test(e.target.value)) {\r\n                error += 'capital letter'\r\n            }\r\n            this.setState({passwordError: error})\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        console.log(this.state.name)\r\n        if(!this.state.name || !this.state.password)\r\n        {\r\n            alert('please enter required values.')\r\n            return\r\n        }\r\n        this.setState({open: false})\r\n        await this.props.registerUser({name: this.state.name, password: this.state.password})\r\n        let token = sessionStorage.getItem('token')\r\n        if(token)\r\n            this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        let registered = this.props.registered || false\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='user' iconPosition='left' ></Input>\r\n                    <Input name=\"email\" fluid placeholder='Enter username' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='at' iconPosition='left' label='@inmar.com' labelPosition='right'></Input>\r\n                    <Input name=\"phone\" fluid placeholder='Enter phone number' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='phone' iconPosition='left' ></Input>\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter password'\r\n                        icon='key' iconPosition='left' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    { this.state.passwordError && <span style={{color:'red'}}>{this.state.passwordError}</span>}\r\n                    { registered && <span style={{color:'green'}}>Now you are registered, please login to proceed.</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='register' primary fluid\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.register} >Register</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    Already a user? <a href='/login'>Login</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        registerUser: bindActionCreators(registerUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterComponent)","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Divider, Message} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { loginUserAction, registerUserAction } from '../../actions/auth'\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            password: '',\r\n            open: true,\r\n            registered: false,\r\n            login: false,\r\n            register: false,\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        console.log(this.state)\r\n        event.preventDefault()\r\n        if(!this.state.name || !this.state.password)\r\n        {\r\n            alert('please enter required values.')\r\n            return\r\n        } \r\n        let elementName = event.target.name;\r\n        this.setState({[elementName]: true})\r\n        if(event.target.name === 'login') {\r\n            await this.props.loginUser({name: this.state.name, password: this.state.password})\r\n        }else {\r\n            await this.props.registerUser({name: this.state.name, password: this.state.password})\r\n        }\r\n        let token = sessionStorage.getItem('token')\r\n        this.setState({[elementName]: false})\r\n        console.log(token)\r\n        if(token && token !== null && token !== undefined && token !== 'undefined') {\r\n            this.setState({open: false})       \r\n            this.props.history.push('/Family')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let registered = this.props.registered || false\r\n\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"email\" fluid placeholder='Enter your username' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='at' iconPosition='left' label='@inmar.com' labelPosition='right'></Input>\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter your password'\r\n                        icon='key' iconPosition='left' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    { registered && <span style={{color:'green'}}>Now you are registered, please login to proceed.</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='login' primary fluid size='small'\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.login} >Login</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    New to us? <a href='/register'>Register</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        registered: state.auth.registered,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loginUser: bindActionCreators(loginUserAction, dispatch),\r\n        registerUser: bindActionCreators(registerUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent)","import React, { Component } from 'react'\nimport { List, Card, Grid, Button, Label } from 'semantic-ui-react';\n\nclass GroupComponent extends Component {\n    \n    render() {\n        return (\n            <List.Item key={this.props.group} >\n                <Card fluid>\n                    <Card.Content>\n                        <Grid columns={2} >\n                            <Grid.Row>\n                                <Grid.Column width='13'>\n                                    <div>\n                                        {this.props.group}\n                                        <Label circular style={{marginLeft:'1em'}}>3</Label>\n                                    </div>\n                                </Grid.Column>\n                                <Grid.Column width='3' >\n                                    <div>\n                                        <Button icon='edit' size='tiny' circular ></Button>\n                                        <Button icon='trash' size='tiny' circular color='red'></Button>\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nexport default GroupComponent","import React from 'react'\nimport GroupComponent from './group';\nimport { Grid, List, Segment, Header, Input, Icon, Button } from 'semantic-ui-react';\n\nexport default function GroupContainerComponent(props) {\n    let groupList = ['friends', 'Project', 'Work']\n    return (\n        <Segment>\n            <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column > \n                        <Header color='grey'>\n                            <Icon name='group' />\n                            <Header.Content>Groups</Header.Content>\n                        </Header>\n                    </Grid.Column>\n                    <Grid.Column >\n                        <Input type='text' placeholder='Add new group' >\n                            <input />\n                            <Button icon='add' size='tiny'></Button>\n                        </Input>\n                    </Grid.Column>\n                    <Grid.Column >\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <List>\n                <GroupComponent group='all'/>\n                {\n                    groupList.map(g => <GroupComponent key={g} group={g} />)\n                }\n            </List>\n        </Segment>\n    )\n}","import React, { Component } from 'react'\nimport { List, Card, Button, Grid } from 'semantic-ui-react';\n\nclass ContactComponent extends Component {\n    \n    render() {\n        return (\n            <List.Item key={this.props.contact} >\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header >{this.props.contact.name}</Card.Header>\n                        <Grid columns={2} >\n                            <Grid.Row>\n                                <Grid.Column width='13'>\n                                    <div>{this.props.contact.email}</div>\n                                    <div>{this.props.contact.phone}</div>\n                                </Grid.Column>\n                                <Grid.Column width='3'>\n                                    <div>\n                                        <Button icon='edit' size='tiny' circular ></Button>\n                                        <Button icon='trash' size='tiny' circular color='red'></Button>\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nexport default ContactComponent","import React from 'react'\nimport { List, Segment, Header, Grid, Input, Icon, Select, Button } from 'semantic-ui-react';\nimport ContactComponent from './contact';\n\nexport default function ContactContainerComponent(props) {\n    let contactList = [\n                        { \n                            name: 'Brajesh jaishwal',\n                            email: 'brajesh.jaishwal@gmail.com',\n                            phone: '9413844898'\n                        },\n                        { \n                            name: 'Shakun jaiswal',\n                            email: 'shakun.jaiswal@gmail.com',\n                            phone: '7665432898'\n                        },\n                        { \n                            name: 'Yesha jaiswal',\n                            email: 'yesha.jaiswal@gmail.com',\n                            phone: '12345678'\n                        }\n                    ]\n    const options = [\n                        { key: 'name', text: 'name', value: 'name' },\n                        { key: 'email', text: 'email', value: 'email' },\n                        { key: 'phone', text: 'phone', value: 'phone' },\n                    ]\n    return (\n        <Segment>\n            <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column > \n                        <Header color='grey' >\n                            <Icon name='address book' />\n                            <Header.Content>Contacts</Header.Content>\n                        </Header>\n\n                    </Grid.Column>\n                    <Grid.Column >\n                        <Input type='text' placeholder='Search contact ...' action>\n                            <input />\n                            <Select compact options={options} defaultValue='name' />\n                            <Button icon='search'></Button>\n                        </Input>\n                    </Grid.Column>\n                    <Grid.Column >\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>            \n            <List>\n                {\n                    contactList.map(c => <ContactComponent key={c.email} contact={c} />)\n                }\n            </List>\n        </Segment>\n    )\n}","import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport GroupContainerComponent from './group/groupContainer';\nimport ContactContainerComponent from './contact/contactContainer';\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <Grid columns={2} divided>\n                <Grid.Row stretched>\n                    <Grid.Column >\n                        <GroupContainerComponent/>\n                    </Grid.Column>\n                    <Grid.Column >\n                        <ContactContainerComponent/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Container, Header, Button } from 'semantic-ui-react'\nimport PrivateRoute from './privateroute'\nimport register from '../user/register';\nimport login from '../user/login';\nimport Dashboard from '../dashboard'\n\n\nclass App extends Component {\n  render() {\n    return (\n          <BrowserRouter>\n            <Container>\n              <div className='ui four item menu'>\n                <Header className=\"item\" color='orange' textAlign='left'>CONTACT BOOK</Header>\n                <Button basic primary icon='plus' size='small' circular content='Add Contact' ></Button>\n              </div>\n              <Switch>\n                <Route exact path=\"/\" component={login}/>\n                <Route exact path=\"/Login\" component={login}/>\n                <Route exact path=\"/Register\" component={register}/>\n                <Route exact path=\"/dashboard\" component={Dashboard}/>\n                <PrivateRoute path=\"/Family\" />\n              </Switch>\n            </Container>\n          </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import globals from '../constants/auth'\r\n\r\nlet initialState = {\r\n    user: '',\r\n    token: '',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    console.log('authreducer', state)\r\n    switch(action.type) {\r\n        case globals.LOGIN:\r\n        case globals.LOGIN_FAILED:\r\n        case globals.LOGIN_SUCCEDED:\r\n            return { ...state, ...action.payload }\r\n        case globals.REGISTER:\r\n        case globals.REGISTER_FAILED:\r\n        case globals.REGISTER_SUCCEDED:\r\n            return { ...state, ...action.payload }\r\n        default:\r\n            return { ...state}\r\n    }\r\n}\r\n\r\nexport default authReducer","const constants = {\r\n    AddContact: 'AddContact',\r\n    AddContact_Success: 'AddContact_Success',\r\n    AddContact_Failure: 'AddContact_Failure',\r\n\r\n    RemoveContact: 'RemoveContact',\r\n    RemoveContact_Success: 'RemoveContact_Success',\r\n    RemoveContact_Failure: 'RemoveContact_Failure',\r\n\r\n    EditContact: 'EditContact',\r\n    EditContact_Success: 'EditContact_Success',\r\n    EditContact_Failure: 'EditContact_Failure',\r\n\r\n    FetchContact: 'FetchContact',\r\n    FetchContact_Success: 'FetchContact_Success',\r\n    FetchContact_Failure: 'FetchContact_Failure',\r\n\r\n    ChangeActive_Contact: 'ChangeActive_Contact',\r\n    ChangeActive_Contact_Success: 'ChangeActive_Contact_Success',\r\n    ChangeActive_Contact_Failure: 'ChangeActive_Contact_Failure',\r\n}\r\n\r\nexport default { ...constants }","import globals from '../constants/contact'\r\n\r\nlet initialState = {\r\n    family: [{\r\n        key: -1,\r\n        name: 'Family Tree',\r\n        relation: 'Root',\r\n        parent: -1111,\r\n    }],\r\n    key:'',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: '',\r\n    success: false,\r\n}\r\n\r\nfunction RemoveOldChildren(arr, parent) {\r\n    return arr.filter(member => member.parent !== parent)\r\n}\r\n\r\nconst familyReducer = (state= initialState, action) => {\r\n    console.log('familyReducer', state)\r\n    switch(action.type) {\r\n        case globals.FetchFamily:\r\n        case globals.FetchFamily_Failure:\r\n            return { ...state, ...action.payload}\r\n        case globals.FetchFamily_Success:\r\n            let parentkey = /*state.key === -1 ? null :*/ state.key\r\n            //let familyRoot = parentkey === null ? [state.family[0]] : []\r\n            let {loading, error} =  action.payload\r\n            let oldFiltered = RemoveOldChildren(state.family, parentkey)\r\n            let tempfamily= [ ...oldFiltered, ...action.payload.members]\r\n            console.log(tempfamily)\r\n            return { ...state, family: [...tempfamily], loading, error }\r\n        case globals.AddMember:\r\n        case globals.AddMember_Failure:\r\n        case globals.AddMember_Success:\r\n            return { ...state, ...action.payload}\r\n        default: \r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default familyReducer","import authReducer from './authReducer'\r\nimport contactReducer from './contactReducer'\r\nimport groupReducer from './groupReducer'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    family: contactReducer,\r\n    group: groupReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/index'\r\n\r\n//create store\r\nconst store = createStore(\r\n    rootReducer, \r\n    applyMiddleware(\r\n        thunk\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}