{"version":3,"sources":["components/app/privateroute.js","constants/auth.js","api/api.js","actions/auth.js","components/user/register.js","components/user/login.js","components/group/group.js","components/group/groupContainer.js","components/contact/contact.js","components/contact/contactContainer.js","components/dashboard.js","components/group/editGroup.js","components/contact/editContact.js","components/header.js","components/app/app.js","serviceWorker.js","reducers/authReducer.js","constants/contact.js","reducers/contactReducer.js","reducers/index.js","store/store.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","sessionStorage","getItem","Redirect","to","pathname","state","from","location","constants","LOGIN","LOGIN_SUCCEDED","LOGIN_FAILED","REGISTER","REGISTER_SUCCEDED","REGISTER_FAILED","FETCHDOMAIN","FETCHDOMAIN_SUCCEDED","FETCHDOMAIN_FAILED","proxy","axios","create","baseURL","handleError","error","errorMessage","response","console","log","data","message","request","config","registerUserAction","name","email","phone","password","post","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","resp","_ref3","wrap","_context","prev","next","type","payload","loading","sent","undefined","registerFailed","registered","t0","stop","this","_x","apply","arguments","loginUserAction","_ref4","_ref5","_callee2","_ref6","user","token","_context2","setItem","loginFailed","loginSucceded","_x2","fetchDomainAction","_ref7","_callee3","_ref8","domain","_context3","get","fetchDomainFailed","fetchDomainSucceded","_x3","oneCapitalLetter","RegExp","oneNumber","oneSpecialLetter","min8Length","RegisterComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","e","tempValue","target","value","setState","defineProperty","test","passwordError","tempEmail","validator","isEmail","emailError","isNumeric","length","phoneError","onSubmitHandler","event","_this$state","preventDefault","alert","abrupt","open","registerUser","nameError","Modal","size","closeOnEscape","closeOnDimmerClick","Header","Content","Input","fluid","placeholder","style","marginTop","onChange","icon","label","labelPosition","color","href","Divider","Button","primary","onClick","register","Message","connect","auth","bindActionCreators","LoginComponent","loginUser","history","push","login","GroupComponent","onEdit","concat","group","id","onDelete","_this$props$group","active","total","selectedGroup","match","params","List","Item","key","Card","Grid","columns","Row","Column","width","Link","Label","circular","marginLeft","GroupContainerComponent","searchString","onSearchChange","_this2","Segment","Icon","selection","map","g","ContactComponent","contact","_this$props$contact","job","ContactContainerComponent","activePage","totalPages","searchBy","sortBy","handlePaginationChange","onSearch","onSort","options","text","Select","compact","defaultValue","content","c","Pagination","onPageChange","Dashboard","stretched","groupContainer_GroupContainerComponent","contactContainer_ContactContainerComponent","EditGroupComponent","onExit","background","iconPosition","Checkbox","toggle","checked","Group","Or","EditContactComponent","contactid","secondary","currentContact","HeaderComponent","onAddContact","onLogout","clear","inverted","as","Subheader","withRouter","App","componentDidMount","fetchDomain","BrowserRouter","Container","header","Switch","exact","path","Boolean","window","hostname","initialState","authReducer","action","globals","objectSpread","constants_contact","AddContact","AddContact_Success","AddContact_Failure","RemoveContact","RemoveContact_Success","RemoveContact_Failure","EditContact","EditContact_Success","EditContact_Failure","FetchContact","FetchContact_Success","FetchContact_Failure","ChangeActive_Contact","ChangeActive_Contact_Success","ChangeActive_Contact_Failure","family","relation","parent","success","familyReducer","arr","FetchFamily","FetchFamily_Failure","FetchFamily_Success","parentkey","_action$payload","oldFiltered","filter","member","tempfamily","toConsumableArray","members","AddMember","AddMember_Failure","AddMember_Success","rootReducer","combineReducers","contactReducer","groupReducer","store","createStore","applyMiddleware","thunk","ReactDOM","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8db35cc3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    return <Route {...rest} render={props => (\r\n                                        sessionStorage.getItem('token')\r\n                                            ? <Component {...props} />\r\n                                            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n                                    )} />\r\n    }","const constants = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGIN_SUCCEDED: \"LOGIN_SUCCEDED\",\r\n    LOGIN_FAILED: \"LOGIN_FAILED\",\r\n\r\n    REGISTER: \"REGISTER\",\r\n    REGISTER_SUCCEDED: \"REGISTER_SUCCEDED\",\r\n    REGISTER_FAILED: \"REGISTER_FAILED\",\r\n\r\n    FETCHDOMAIN: \"FETCHDOMAIN\",\r\n    FETCHDOMAIN_SUCCEDED: \"FETCHDOMAIN_SUCCEDED\",\r\n    FETCHDOMAIN_FAILED: \"FETCHDOMAIN_FAILED\",\r\n}\r\n\r\nexport default constants","import axios from 'axios'\r\n\r\nconst serverUrl = process.env.NODE_ENV === 'production' ? 'https://addressbook-2.herokuapp.com/' : 'http://localhost:3300/'\r\nexport const proxy = axios.create({ \r\n    baseURL: serverUrl\r\n})\r\n\r\nexport const handleError = error => {\r\n    let errorMessage = ''\r\n    if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response);\r\n        errorMessage = error.response.data.message;\r\n        // console.log(error.response.status);\r\n        // console.log(error.response.headers);\r\n    } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the \r\n        // browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n        errorMessage = 'Network error'\r\n    } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n        errorMessage = error.message;\r\n    }\r\n    console.log(error.config);\r\n    return errorMessage;\r\n}\r\n","import constants from '../constants/auth'\r\nimport { proxy, handleError } from '../api/api'\r\n\r\nconst { REGISTER, REGISTER_FAILED, REGISTER_SUCCEDED, \r\n        LOGIN, LOGIN_SUCCEDED, LOGIN_FAILED,\r\n        FETCHDOMAIN, FETCHDOMAIN_SUCCEDED, FETCHDOMAIN_FAILED\r\n        } = constants\r\n\r\nexport const registerUserAction = function ({name, email, phone, password}) {\r\n    const request = proxy.post('users/register', {name, email, phone, password})\r\n    return async (dispatch) => {\r\n        dispatch(registerStarted())\r\n        try{\r\n            let resp = await request\r\n            let {message} = await resp.data\r\n            if(message !== undefined) {\r\n                dispatch(registerFailed(message))\r\n            }else \r\n                dispatch(registerSucceded())\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(registerFailed(errorMessage))\r\n        }\r\n    }\r\n    function registerStarted() { return { type: REGISTER , payload: { error: false, loading: true }} }\r\n    function registerSucceded() { return { type: REGISTER_SUCCEDED, payload: { registered: true, loading: false } } }\r\n    function registerFailed(error) { return { type: REGISTER_FAILED, payload: { error, loading: false} } }\r\n}\r\n\r\nexport const loginUserAction = ({email, password}) => {\r\n    return async (dispatch) => {\r\n        dispatch(loginStarted())\r\n        try{\r\n            let resp = await proxy.post('users/login', {email, password})\r\n            let {user, token, message } = await resp.data\r\n            if(user && user !== '' && user !== undefined)\r\n                sessionStorage.setItem('name', user.name)\r\n            if(token && token !== '' && token !== undefined )\r\n                sessionStorage.setItem('token', token)\r\n            if(user === null || user === undefined || token === undefined) {\r\n                dispatch(loginFailed(message))\r\n            }else \r\n                dispatch(loginSucceded(user))\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(loginFailed(errorMessage))\r\n        }\r\n    }\r\n    function loginStarted() { return { type: LOGIN, payload: { error: false, loading: true } } }\r\n    function loginSucceded(user) { return { type: LOGIN_SUCCEDED, payload: { user, loading: false } } }\r\n    function loginFailed(error) { return { type: LOGIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n\r\nexport const fetchDomainAction = () => {\r\n    return async (dispatch) => {\r\n        dispatch(fetchDomainStarted())\r\n        try{\r\n            let resp = await proxy.get('domain')\r\n            let { domain, message } = await resp.data\r\n            if(domain === null || domain === undefined || domain === undefined) {\r\n                dispatch(fetchDomainFailed(message))\r\n            }else {\r\n                sessionStorage.setItem('domain', domain)\r\n                dispatch(fetchDomainSucceded(domain))\r\n            }\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(fetchDomainFailed(errorMessage))\r\n        }\r\n    }\r\n    function fetchDomainStarted() { return { type: FETCHDOMAIN, payload: { error: false, loading: true } } }\r\n    function fetchDomainSucceded(domain) { return { type: FETCHDOMAIN_SUCCEDED, payload: { domain, loading: false } } }\r\n    function fetchDomainFailed(error) { return { type: FETCHDOMAIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Message, Divider} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { registerUserAction } from '../../actions/auth';\r\nimport validator from 'validator'\r\n\r\n//var strongRegex = new RegExp(\"^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\nconst oneCapitalLetter = new RegExp(\"^(?=.*[A-Z])\")\r\nconst oneNumber = new RegExp(\"^(?=.*[0-9])\")\r\nconst oneSpecialLetter = new RegExp(\"^(?=.*[!@#$%^&*])\")\r\nconst min8Length = new RegExp(\"^(?=.{8,})\")\r\n\r\n\r\nclass RegisterComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone:'',\r\n            password: '',\r\n            open: true,\r\n            passwordError: 'length > 8, special character, number, capital letter',\r\n            emailError: '',\r\n            phoneError: '',\r\n            nameError: '',\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        let tempValue = e.target.value\r\n        this.setState({[e.target.name]: tempValue})\r\n        if(e.target.name === 'password') {\r\n            let error = ''\r\n            if(!min8Length.test(tempValue)) {\r\n                error += 'length > 8, '\r\n            }\r\n            if(!oneSpecialLetter.test(tempValue)) {\r\n                error += 'special character, '\r\n            }\r\n            if(!oneNumber.test(tempValue)) {\r\n                error += 'number, '\r\n            }\r\n            if(!oneCapitalLetter.test(tempValue)) {\r\n                error += 'capital letter'\r\n            }\r\n            this.setState({passwordError: error})\r\n        } else if(e.target.name === 'email') {\r\n            let tempEmail = tempValue + this.props.domain\r\n            let error = ''\r\n            if(tempValue && !validator.isEmail(tempEmail)) {\r\n                error = 'Email not valid'\r\n            }\r\n            this.setState({emailError: error})\r\n        } else if(e.target.name === 'phone') {\r\n            let error = ''\r\n            if(tempValue && (!validator.isNumeric(tempValue) || tempValue.length < 10)) {\r\n                error = 'phone number not valid'\r\n            }\r\n            this.setState({phoneError: error})\r\n        } \r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        console.log(this.state.name)\r\n        if( this.state.emailError || this.state.passwordError || this.state.phoneError ||\r\n            !this.state.name || !this.state.password || !this.state.phone || !this.state.email)\r\n        {\r\n            alert('please correct all entries.')\r\n            return\r\n        }\r\n        this.setState({open: false})\r\n        let {name, email, phone, password} = this.state\r\n        await this.props.registerUser({name, email, phone, password,})\r\n    }\r\n\r\n    render() {\r\n        let registered = this.props.registered || false\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='user' ></Input>\r\n\r\n                    <Input name=\"email\" fluid placeholder='Enter email' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} label = {this.props.domain} labelPosition='right'></Input>\r\n                    { this.state.emailError && <span style={{color:'red'}}>{this.state.emailError}</span>}\r\n\r\n                    <Input name=\"phone\" fluid placeholder='Enter phone number' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='phone' ></Input>\r\n                    { this.state.phoneError && <span style={{color:'red'}}>{this.state.phoneError}</span>}\r\n\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter password'\r\n                        icon='key' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.state.passwordError && <span style={{color:'red'}}>{this.state.passwordError}</span>}\r\n\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    { registered && <span style={{color:'green'}}>Now you are registered, please <a href='/login'>login</a> to proceed.</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='register' primary fluid\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.register} >Register</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    Already a user? <a href='/login'>Login</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        domain: state.auth.domain,\r\n        registered: state.auth.registered,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        registerUser: bindActionCreators(registerUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterComponent)","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Divider, Message} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { loginUserAction } from '../../actions/auth'\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            open: true,\r\n            login: false,\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        console.log(this.state)\r\n        event.preventDefault()\r\n        if(!this.state.email || !this.state.password)\r\n        {\r\n            alert('please enter required values.')\r\n            return\r\n        } \r\n        let { email, password } = this.state\r\n        await this.props.loginUser({email, password})\r\n        let token = sessionStorage.getItem('token')\r\n        console.log(token)\r\n        if(token && token !== null && token !== undefined && token !== 'undefined') {\r\n            this.setState({open: false})       \r\n            this.props.history.push('/dashboard')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('in login page', this.props)\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"email\" fluid placeholder='Enter your username' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} label={this.props.domain} labelPosition='right'></Input>\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter your password'\r\n                        icon='key' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='login' primary fluid size='small'\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.login} >Login</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    New to us? <a href='/register'>Register</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        domain: state.auth.domain,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loginUser: bindActionCreators(loginUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { List, Card, Grid, Button, Label } from 'semantic-ui-react';\n\nclass GroupComponent extends Component {\n    onEdit = event => {\n        event.preventDefault()\n        this.props.history.push(`/editgroup/${this.props.group.id}`)\n    }\n    onDelete = event => {\n        event.preventDefault()\n    }\n    render() {\n        let { id, name, active, total } = this.props.group\n        let selectedGroup = this.props.match.params.group || 'All Contacts'\n        return (\n            <List.Item key={id} >\n                <Card fluid color={selectedGroup === name ? 'red' : 'grey'} >\n                    <Card.Content>\n                        <Grid columns={2}>\n                            <Grid.Row >\n                                <Grid.Column width='11'>\n                                    <div >\n                                        <Link to={`/dashboard/${name}`}>{name}</Link>\n                                        <Label circular style={{marginLeft:'1em'}} >{total}</Label>\n                                        <Label circular style={{marginLeft:'1em'}}>\n                                            { active ? 'Active' : 'Inactive' }\n                                        </Label>\n                                    </div>\n                                </Grid.Column>\n                                <Grid.Column width='5' >\n                                    <div>\n                                        <Button icon='pencil' size='tiny' circular\n                                            onClick={this.onEdit}/>\n                                        <Button icon='delete' size='tiny' circular color='yellow' \n                                            onClick={this.onDelete} />\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nexport default GroupComponent","import React, { Component } from 'react'\nimport GroupComponent from './group';\nimport { Grid, List, Segment, Header, Input, Icon, Button } from 'semantic-ui-react';\n\nexport default class GroupContainerComponent extends Component {\n\n    state = {\n        searchString: '',\n    }\n\n    onSearchChange = () => {\n        \n    }\n    render () {\n        let groupList = [\n                            { id:'0000', name: 'All Contacts', active: true, total: 10 }, \n                            { id:'1111', name: 'Friends', active: true, total: 2 }, \n                            { id:'2222', name: 'Project', active: true, total: 5 },\n                            { id:'3333', name: 'Work', active: false, total: 3 },\n                        ]\n    \n        return (\n            <Segment>\n                <Grid columns={2}>\n                    <Grid.Row>\n                        <Grid.Column width={6}> \n                            <Header color='yellow'>\n                                <Icon name='group' />\n                                <Header.Content>Groups</Header.Content>\n                            </Header>\n                        </Grid.Column>\n                        <Grid.Column >\n                            <Input type='text' placeholder='Add new group' >\n                                <input />\n                                <Button icon='add' size='tiny' type='submit' ></Button>\n                            </Input>\n                        </Grid.Column>\n                        <Grid.Column >\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <List selection>\n                    {\n                        groupList.map(g => <GroupComponent  name={g.name}\n                                                            key={g.id} \n                                                            group={g}\n                                                            {...this.props}/>)\n                    }\n                </List>\n            </Segment>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { List, Card, Button, Grid, Label } from 'semantic-ui-react';\n\nclass ContactComponent extends Component {\n    onEdit = event => {\n        event.preventDefault()\n        console.log(this.props)\n        this.props.history.push(`/editcontact/${this.props.contact.id}`)\n    }\n    onDelete = event => {\n        event.preventDefault()\n    }\n    render() {\n        let { id, name, email, phone, job } = this.props.contact\n        return (\n            <List.Item key={id} >\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header >\n                            {name}\n                            <Label circular style={{marginLeft:'1em'}}>Active</Label>\n                        </Card.Header>\n                        <Grid columns={2} >\n                            <Grid.Row>\n                                <Grid.Column width='13'>\n                                    <div>{job}</div>\n                                    <div>{email}</div>\n                                    <div>{phone}</div>\n                                </Grid.Column>\n                                <Grid.Column width='3'>\n                                    <div>\n                                        <Button icon='pencil' size='tiny' circular \n                                            onClick={this.onEdit} />\n                                        <Button icon='delete' size='tiny' circular color='yellow'\n                                            onClick={this.onDelete} />\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nexport default ContactComponent","import React, { Component } from 'react'\nimport { List, Segment, Header, Grid, Input, Icon, Select, Button, Pagination } from 'semantic-ui-react';\nimport ContactComponent from './contact';\n\nexport default class ContactContainerComponent extends Component {\n    state = {\n        activePage: 1,\n        totalPages: 5,\n        searchString: '',\n        searchBy: 'name',\n        sortBy: 'name'\n    }\n\n    handlePaginationChange = (e, { activePage }) => {\n        this.setState({ activePage })\n    }\n\n    onSearch = () => {\n\n    }\n\n    onSort = () => {\n\n    }\n\n    onChangeHandler = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    render() {\n        let selectedGroup = this.props.match.params.group || 'All Contacts'\n        let contactList = [\n                            { \n                                id: '11111',\n                                name: 'Brajesh jaishwal',\n                                job: 'Senior software developer',\n                                email: 'brajesh.jaishwal@gmail.com',\n                                phone: '9413844898',\n                                active: true,\n                            },\n                            { \n                                id: '12455',\n                                name: 'Shakun jaiswal',\n                                job: 'Project leader',\n                                email: 'shakun.jaiswal@gmail.com',\n                                phone: '7665432898',\n                                active: true,\n                            },\n                            { \n                                id: '112333',\n                                name: 'Yesha jaiswal',\n                                job: 'Software developer',\n                                email: 'yesha.jaiswal@gmail.com',\n                                phone: '12345678',\n                                active: false,\n                            }\n                        ]\n        const options = [\n                            { key: 'name', text: 'name', value: 'name' },\n                            { key: 'email', text: 'email', value: 'email' },\n                            { key: 'phone', text: 'phone', value: 'phone' },\n                        ]\n        return (\n            <div>\n                <Segment>\n                    <Grid >\n                            <Grid.Column width={4}> \n                                <Header color='yellow' >\n                                    <Icon name='address card' />\n                                    <Header.Content>{selectedGroup}</Header.Content>\n                                </Header>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <Input type='text' placeholder='Search contact ...'>\n                                    <input />\n                                    <Select compact options={options} defaultValue='name' />\n                                    <Button icon='search' compact />\n                                </Input>\n                            </Grid.Column>\n                            <Grid.Column width={3}>\n                                <Input >\n                                    <Select compact options={options} defaultValue='name' />\n                                    <Button compact content='Sort'/>\n                                </Input>\n                            </Grid.Column>\n                    </Grid>            \n                    <List selection>\n                        {\n                            contactList.map(c => <ContactComponent key={c.email} contact={c} {...this.props}/>)\n                        }\n                    </List>\n                </Segment>\n                <Segment>\n                    <Pagination\n                        activePage={this.state.activePage}\n                        onPageChange={this.handlePaginationChange}\n                        totalPages={this.state.totalPages}\n                    />\n                    <Input name='pagesize' placeholder='pagesize' onChange={this.onChangeHandler}/>\n                </Segment>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport GroupContainerComponent from './group/groupContainer';\nimport ContactContainerComponent from './contact/contactContainer';\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <Grid stretched>\n                <Grid.Column width={6}>\n                    <GroupContainerComponent {...this.props}/>\n                </Grid.Column>\n                <Grid.Column width={10}>\n                    <ContactContainerComponent {...this.props}/>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, {Component} from 'react'\nimport {Input, Button, Modal, Divider, Checkbox, Header} from 'semantic-ui-react'\nimport {bindActionCreators} from 'redux'\nimport { connect } from 'react-redux'\nimport { registerUserAction } from '../../actions/auth';\n\nclass EditGroupComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            group: this.props.group | '',\n            active: this.props.active | false,\n            open: true,\n        }\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmitHandler = async (event) => {\n        event.preventDefault()\n        this.setState({open: false})\n        await this.props.registerUser({name: this.state.name, password: this.state.password})\n        this.props.history.push('/dashboard')\n    }\n\n    onExit = event => {\n        event.preventDefault()\n        this.setState({open: false})\n        this.props.history.push('/dashboard')\n    }\n\n    render() {\n        return (\n            <Modal size='mini' open={this.state.open} closeOnEscape={true} closeOnDimmerClick={true} >\n                <Header color='orange' style={{background:'orange'}}>Group Information</Header>\n                <Modal.Content>\n                    <Input name=\"group\" fluid placeholder='Enter group' style={{marginTop: '0.5em'}}\n                        onChange={this.onChangeHandler} icon='group' iconPosition='left' />\n                    <Checkbox name = 'active' toggle style={{marginTop:'1em'}}\n                        label={ this.state.active ? 'deactivate' : 'activate'}\n                        checked = { this.state.active }\n                        onChange={this.onChangeHandler} />\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\n                    <Divider></Divider>\n                    <Button.Group>\n                        <Button name='Save' color='orange' \n                            onClick = {this.onSubmitHandler}\n                            loading= { this.props.loading } icon='save' content='' circular compact></Button>\n                        <Button.Or />\n                        <Button name='Cancel' onClick = {this.onExit} icon='cancel' content='' circular compact></Button>\n                    </Button.Group>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registerUser: bindActionCreators(registerUserAction, dispatch),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(EditGroupComponent)","import React, {Component} from 'react'\nimport {Input, Button, Modal, Divider, Checkbox, Header} from 'semantic-ui-react'\nimport {bindActionCreators} from 'redux'\nimport { connect } from 'react-redux'\nimport { registerUserAction } from '../../actions/auth';\n\nclass EditContactComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            contactid: this.props.match.params.id,\n            name: this.props.name,\n            job: this.props.job,\n            phone: this.props.phone,\n            email: this.props.email,\n            group: this.props.group,\n            active: this.props.active,\n            open: true,\n        }\n    }\n\n    componentDidMount() {\n        //let contactid = this.props.match.params.id\n        //console.log('contact id', contactid)\n        if(this.state.contactid) {\n            //fetch cached contact detail\n        }\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmitHandler = async (event) => {\n        event.preventDefault()\n        this.setState({open: false})\n        await this.props.registerUser({name: this.state.name, password: this.state.password})\n        this.props.history.push('/dashboard')\n    }\n\n    onExit = event => {\n        event.preventDefault()\n        this.setState({open: false})\n        this.props.history.push('/dashboard')\n    }\n\n    render() {\n        return (\n            <Modal size='mini' open={this.state.open} closeOnEscape={true} closeOnDimmerClick={true}>\n                <Header color='orange' style={{background:'orange'}}>Contact Information</Header>\n                <Modal.Content>\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\n                        onChange={this.onChangeHandler} icon='user' iconPosition='left' />\n                    <Input name=\"email\" fluid placeholder='Enter email' style={{marginTop: '0.5em'}}\n                        onChange={this.onChangeHandler} icon='at' iconPosition='left' \n                        label='@inmar.com' labelPosition='right' />\n                    <Input name=\"phone\" fluid placeholder='Enter phone' style={{marginTop: '0.5em'}}\n                        onChange={this.onChangeHandler} icon='phone' iconPosition='left' />\n                    <Input name=\"job\" fluid placeholder='Enter job role' style={{marginTop: '0.5em'}}\n                        onChange={this.onChangeHandler} icon='info' iconPosition='left' />\n                    { this.state.contactid && <Checkbox name = 'active' toggle style={{marginTop:'1em'}}\n                        label={ this.state.active ? 'deactivate' : 'activate'}\n                        checked = { this.state.active }\n                        onChange={this.onChangeHandler} />}\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\n                    <Divider></Divider>\n                    <Button.Group>\n                        <Button name='Save' primary \n                            onClick = {this.onSubmitHandler}\n                            loading= { this.props.loading } icon='save' content='' circular compact></Button>\n                        <Button.Or />\n                        <Button name='Cancel' secondary onClick = {this.onExit} icon='cancel' content='' circular compact></Button>\n                    </Button.Group>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nfunction mapStateToPrps(state) {\n    return {\n        contact: state.currentContact\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registerUser: bindActionCreators(registerUserAction, dispatch),\n    }\n}\n\nexport default connect(mapStateToPrps, mapDispatchToProps)(EditContactComponent)","import React, {Component} from 'react'\r\nimport { Segment, Grid, Header, Button, Icon } from 'semantic-ui-react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass HeaderComponent extends Component {\r\n    \r\n    onAddContact = event => {\r\n        event.preventDefault()\r\n        this.props.history.push('/addcontact')\r\n    }\r\n    onLogout = event => {\r\n        event.preventDefault()\r\n        sessionStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        let user = sessionStorage.getItem('name')\r\n        return (\r\n                    <Segment inverted color='yellow'>\r\n                        <Grid>\r\n                            <Grid.Column width={12}>\r\n                                <Header as='h2' color='orange'>\r\n                                    <Icon name='address book' />\r\n                                    <Header.Content>\r\n                                        Contact Manager\r\n                                    <Header.Subheader>{`Hi, ${user}`}</Header.Subheader>\r\n                                    </Header.Content>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width='4'>\r\n                                <Button icon='plus' compact circular content='Add Contact' \r\n                                    onClick={this.onAddContact}></Button>\r\n                                <Button icon='lock' compact circular content='Logout' \r\n                                    onClick={this.onLogout}></Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Segment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(HeaderComponent)","import React, { Component } from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport PrivateRoute from './privateroute'\nimport register from '../user/register';\nimport login from '../user/login';\nimport Dashboard from '../dashboard'\nimport EditGroupComponent from '../group/editGroup'\nimport EditContactComponent from '../contact/editContact'\nimport { fetchDomainAction } from '../../actions/auth'\nimport HeaderComponent from '../header'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\n\nclass App extends Component {\n  componentDidMount = async () => {\n    //console.log('in app loading')\n    await this.props.fetchDomain()\n  }\n  render() {\n    return (\n          <BrowserRouter>\n            <Container>\n              <HeaderComponent />\n              <Switch>\n                <Route exact path=\"/\" component={login}/>\n                <Route exact path=\"/Login\" component={login}/>\n                <Route exact path=\"/Register\" component={register}/>\n                { /* below all will be protected routes*/ }\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n                <PrivateRoute exact path=\"/dashboard/:group\" component={Dashboard}/>\n                <PrivateRoute exact path=\"/editgroup/:id\" component={EditGroupComponent}/>\n                <PrivateRoute exact path=\"/addcontact\" component={EditContactComponent}/>\n                <PrivateRoute exact path=\"/editcontact/:id\" component={EditContactComponent}/>\n              </Switch>\n            </Container>\n          </BrowserRouter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log('fetched domain', state)\n  return {\n    domain: state.domain\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchDomain: bindActionCreators(fetchDomainAction, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import globals from '../constants/auth'\r\n\r\nlet initialState = {\r\n    domain: '',\r\n    user: '',\r\n    token: '',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    console.log('authreducer', state)\r\n    switch(action.type) {\r\n        case globals.LOGIN:\r\n        case globals.LOGIN_FAILED:\r\n        case globals.LOGIN_SUCCEDED:\r\n        case globals.REGISTER:\r\n        case globals.REGISTER_FAILED:\r\n        case globals.REGISTER_SUCCEDED:\r\n        case globals.FETCHDOMAIN:\r\n        case globals.FETCHDOMAIN_SUCCEDED:\r\n        case globals.FETCHDOMAIN_FAILED:\r\n            return { ...state, ...action.payload }\r\n        default:\r\n            return { ...state}\r\n    }\r\n}\r\n\r\nexport default authReducer","const constants = {\r\n    AddContact: 'AddContact',\r\n    AddContact_Success: 'AddContact_Success',\r\n    AddContact_Failure: 'AddContact_Failure',\r\n\r\n    RemoveContact: 'RemoveContact',\r\n    RemoveContact_Success: 'RemoveContact_Success',\r\n    RemoveContact_Failure: 'RemoveContact_Failure',\r\n\r\n    EditContact: 'EditContact',\r\n    EditContact_Success: 'EditContact_Success',\r\n    EditContact_Failure: 'EditContact_Failure',\r\n\r\n    FetchContact: 'FetchContact',\r\n    FetchContact_Success: 'FetchContact_Success',\r\n    FetchContact_Failure: 'FetchContact_Failure',\r\n\r\n    ChangeActive_Contact: 'ChangeActive_Contact',\r\n    ChangeActive_Contact_Success: 'ChangeActive_Contact_Success',\r\n    ChangeActive_Contact_Failure: 'ChangeActive_Contact_Failure',\r\n}\r\n\r\nexport default { ...constants }","import globals from '../constants/contact'\r\n\r\nlet initialState = {\r\n    family: [{\r\n        key: -1,\r\n        name: 'Family Tree',\r\n        relation: 'Root',\r\n        parent: -1111,\r\n    }],\r\n    key:'',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: '',\r\n    success: false,\r\n}\r\n\r\nfunction RemoveOldChildren(arr, parent) {\r\n    return arr.filter(member => member.parent !== parent)\r\n}\r\n\r\nconst familyReducer = (state= initialState, action) => {\r\n    console.log('familyReducer', state)\r\n    switch(action.type) {\r\n        case globals.FetchFamily:\r\n        case globals.FetchFamily_Failure:\r\n            return { ...state, ...action.payload}\r\n        case globals.FetchFamily_Success:\r\n            let parentkey = /*state.key === -1 ? null :*/ state.key\r\n            //let familyRoot = parentkey === null ? [state.family[0]] : []\r\n            let {loading, error} =  action.payload\r\n            let oldFiltered = RemoveOldChildren(state.family, parentkey)\r\n            let tempfamily= [ ...oldFiltered, ...action.payload.members]\r\n            console.log(tempfamily)\r\n            return { ...state, family: [...tempfamily], loading, error }\r\n        case globals.AddMember:\r\n        case globals.AddMember_Failure:\r\n        case globals.AddMember_Success:\r\n            return { ...state, ...action.payload}\r\n        default: \r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default familyReducer","import authReducer from './authReducer'\r\nimport contactReducer from './contactReducer'\r\nimport groupReducer from './groupReducer'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    family: contactReducer,\r\n    group: groupReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/index'\r\n\r\n//create store\r\nconst store = createStore(\r\n    rootReducer, \r\n    applyMiddleware(\r\n        thunk\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}